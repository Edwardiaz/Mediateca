package mediateca.form;

import datos.Conexion;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;

/**
 *
 * @author user
 */
public class Agregar extends javax.swing.JFrame {

    Conexion co = new Conexion();
    Connection con = co.getConnection();
    
    public Agregar() throws SQLException{
        initComponents();
        this.setLocationRelativeTo(null);
        this.setTitle("Agregar Libro.");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();
        jMenu5 = new javax.swing.JMenu();
        jRadioButtonMenuItem2 = new javax.swing.JRadioButtonMenuItem();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jProgressBar1 = new javax.swing.JProgressBar();
        jSeparator4 = new javax.swing.JSeparator();
        pnlAgregarMenu = new javax.swing.JPanel();
        txtIdlibro = new javax.swing.JTextField();
        lblIdLibro = new javax.swing.JLabel();
        lblNewLibro = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        jSeparator6 = new javax.swing.JSeparator();
        jSeparator7 = new javax.swing.JSeparator();
        txtTituloLibro = new javax.swing.JTextField();
        lblTituloLibro = new javax.swing.JLabel();
        jSeparator8 = new javax.swing.JSeparator();
        txtAutorLibro = new javax.swing.JTextField();
        lblAutorLibro = new javax.swing.JLabel();
        jSeparator9 = new javax.swing.JSeparator();
        txtPaginas = new javax.swing.JTextField();
        lblPaginas = new javax.swing.JLabel();
        jSeparator10 = new javax.swing.JSeparator();
        txtEditorial = new javax.swing.JTextField();
        lblEditorial = new javax.swing.JLabel();
        jSeparator12 = new javax.swing.JSeparator();
        txtIsbn = new javax.swing.JTextField();
        lblIsbn = new javax.swing.JLabel();
        jSeparator13 = new javax.swing.JSeparator();
        txtFecha = new javax.swing.JTextField();
        lblFecha = new javax.swing.JLabel();
        jSeparator14 = new javax.swing.JSeparator();
        txtDisponible = new javax.swing.JTextField();
        lblDisponible = new javax.swing.JLabel();
        btnAgregar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jSeparator15 = new javax.swing.JSeparator();
        txtTipo = new javax.swing.JTextField();
        lblTipo = new javax.swing.JLabel();

        jRadioButtonMenuItem1.setSelected(true);
        jRadioButtonMenuItem1.setText("jRadioButtonMenuItem1");

        jMenu5.setText("jMenu5");

        jRadioButtonMenuItem2.setSelected(true);
        jRadioButtonMenuItem2.setText("jRadioButtonMenuItem2");

        jMenuItem1.setText("jMenuItem1");

        jSeparator4.setForeground(new java.awt.Color(204, 204, 204));
        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator4.setPreferredSize(new java.awt.Dimension(200, 10));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        pnlAgregarMenu.setBackground(new java.awt.Color(255, 255, 255));
        pnlAgregarMenu.setForeground(new java.awt.Color(102, 0, 204));
        pnlAgregarMenu.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtIdlibro.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        txtIdlibro.setForeground(new java.awt.Color(102, 102, 102));
        txtIdlibro.setText("Ingrese ID del Libro");
        txtIdlibro.setAlignmentX(0.8F);
        txtIdlibro.setBorder(null);
        txtIdlibro.setMargin(new java.awt.Insets(5, 15, 5, 5));
        txtIdlibro.setMinimumSize(new java.awt.Dimension(5, 20));
        txtIdlibro.setName("txtIdlibro"); // NOI18N
        txtIdlibro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtIdlibroMousePressed(evt);
            }
        });
        pnlAgregarMenu.add(txtIdlibro, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 90, 260, 30));

        lblIdLibro.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblIdLibro.setForeground(new java.awt.Color(102, 0, 204));
        lblIdLibro.setText("Libro ID");
        lblIdLibro.setName("lblId"); // NOI18N
        pnlAgregarMenu.add(lblIdLibro, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 70, -1, -1));

        lblNewLibro.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblNewLibro.setForeground(new java.awt.Color(102, 0, 204));
        lblNewLibro.setText("Agregar Libro");
        pnlAgregarMenu.add(lblNewLibro, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 20, -1, -1));
        pnlAgregarMenu.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 92, -1, 170));
        pnlAgregarMenu.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 80, -1, -1));

        jSeparator5.setForeground(new java.awt.Color(102, 0, 204));
        jSeparator5.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator5.setPreferredSize(new java.awt.Dimension(200, 10));
        pnlAgregarMenu.add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 20, 10, 440));

        jSeparator6.setForeground(new java.awt.Color(102, 0, 204));
        jSeparator6.setPreferredSize(new java.awt.Dimension(200, 10));
        pnlAgregarMenu.add(jSeparator6, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 120, 260, 10));

        jSeparator7.setForeground(new java.awt.Color(102, 0, 204));
        jSeparator7.setPreferredSize(new java.awt.Dimension(200, 10));
        pnlAgregarMenu.add(jSeparator7, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 200, 260, 10));

        txtTituloLibro.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        txtTituloLibro.setForeground(new java.awt.Color(102, 102, 102));
        txtTituloLibro.setText("Ingrese título");
        txtTituloLibro.setAlignmentX(0.8F);
        txtTituloLibro.setBorder(null);
        txtTituloLibro.setMargin(new java.awt.Insets(5, 15, 5, 5));
        txtTituloLibro.setMinimumSize(new java.awt.Dimension(5, 20));
        txtTituloLibro.setName("txtTituloLibro"); // NOI18N
        txtTituloLibro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtTituloLibroMousePressed(evt);
            }
        });
        pnlAgregarMenu.add(txtTituloLibro, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 170, 260, 30));

        lblTituloLibro.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTituloLibro.setForeground(new java.awt.Color(102, 0, 204));
        lblTituloLibro.setText("Título");
        lblTituloLibro.setName("lblTituloLibro"); // NOI18N
        pnlAgregarMenu.add(lblTituloLibro, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 150, -1, -1));

        jSeparator8.setForeground(new java.awt.Color(102, 0, 204));
        jSeparator8.setPreferredSize(new java.awt.Dimension(200, 10));
        pnlAgregarMenu.add(jSeparator8, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 280, 260, 10));

        txtAutorLibro.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        txtAutorLibro.setForeground(new java.awt.Color(102, 102, 102));
        txtAutorLibro.setText("Ingrese autor");
        txtAutorLibro.setAlignmentX(0.8F);
        txtAutorLibro.setBorder(null);
        txtAutorLibro.setMargin(new java.awt.Insets(5, 15, 5, 5));
        txtAutorLibro.setMinimumSize(new java.awt.Dimension(5, 20));
        txtAutorLibro.setName("txtAutorLibro"); // NOI18N
        txtAutorLibro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtAutorLibroMousePressed(evt);
            }
        });
        pnlAgregarMenu.add(txtAutorLibro, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 250, 260, 30));

        lblAutorLibro.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblAutorLibro.setForeground(new java.awt.Color(102, 0, 204));
        lblAutorLibro.setText("Autor");
        lblAutorLibro.setName("lblAutorLibro"); // NOI18N
        pnlAgregarMenu.add(lblAutorLibro, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 230, -1, -1));

        jSeparator9.setForeground(new java.awt.Color(102, 0, 204));
        jSeparator9.setPreferredSize(new java.awt.Dimension(200, 10));
        pnlAgregarMenu.add(jSeparator9, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 360, 260, 10));

        txtPaginas.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        txtPaginas.setForeground(new java.awt.Color(102, 102, 102));
        txtPaginas.setText("Ingrese número de páginas");
        txtPaginas.setAlignmentX(0.8F);
        txtPaginas.setBorder(null);
        txtPaginas.setMargin(new java.awt.Insets(5, 15, 5, 5));
        txtPaginas.setMinimumSize(new java.awt.Dimension(5, 20));
        txtPaginas.setName("txtPaginas"); // NOI18N
        txtPaginas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtPaginasMousePressed(evt);
            }
        });
        pnlAgregarMenu.add(txtPaginas, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 330, 260, 30));

        lblPaginas.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblPaginas.setForeground(new java.awt.Color(102, 0, 204));
        lblPaginas.setText("Páginas");
        lblPaginas.setName("lblPaginas"); // NOI18N
        pnlAgregarMenu.add(lblPaginas, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 310, -1, -1));

        jSeparator10.setForeground(new java.awt.Color(102, 0, 204));
        jSeparator10.setPreferredSize(new java.awt.Dimension(200, 10));
        pnlAgregarMenu.add(jSeparator10, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 440, 260, 10));

        txtEditorial.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        txtEditorial.setForeground(new java.awt.Color(102, 102, 102));
        txtEditorial.setText("Ingrese nombre de editorial");
        txtEditorial.setAlignmentX(0.8F);
        txtEditorial.setBorder(null);
        txtEditorial.setMargin(new java.awt.Insets(5, 15, 5, 5));
        txtEditorial.setMinimumSize(new java.awt.Dimension(5, 20));
        txtEditorial.setName("txtEditorial"); // NOI18N
        txtEditorial.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtEditorialMousePressed(evt);
            }
        });
        pnlAgregarMenu.add(txtEditorial, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 410, 260, 30));

        lblEditorial.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblEditorial.setForeground(new java.awt.Color(102, 0, 204));
        lblEditorial.setText("Editorial");
        lblEditorial.setName("lblEditorial"); // NOI18N
        pnlAgregarMenu.add(lblEditorial, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 390, -1, -1));

        jSeparator12.setForeground(new java.awt.Color(102, 0, 204));
        jSeparator12.setPreferredSize(new java.awt.Dimension(200, 10));
        pnlAgregarMenu.add(jSeparator12, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 120, 260, 10));

        txtIsbn.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        txtIsbn.setForeground(new java.awt.Color(102, 102, 102));
        txtIsbn.setText("Ingrese los 13 digitos del ISBN");
        txtIsbn.setAlignmentX(0.8F);
        txtIsbn.setBorder(null);
        txtIsbn.setMargin(new java.awt.Insets(5, 15, 5, 5));
        txtIsbn.setMinimumSize(new java.awt.Dimension(5, 20));
        txtIsbn.setName("txtIsbn"); // NOI18N
        txtIsbn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtIsbnMousePressed(evt);
            }
        });
        pnlAgregarMenu.add(txtIsbn, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 90, 260, 30));

        lblIsbn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblIsbn.setForeground(new java.awt.Color(102, 0, 204));
        lblIsbn.setText("ISBN");
        lblIsbn.setName("lblIsbn"); // NOI18N
        pnlAgregarMenu.add(lblIsbn, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 70, -1, -1));

        jSeparator13.setForeground(new java.awt.Color(102, 0, 204));
        jSeparator13.setPreferredSize(new java.awt.Dimension(200, 10));
        pnlAgregarMenu.add(jSeparator13, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 200, 260, 10));

        txtFecha.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        txtFecha.setForeground(new java.awt.Color(102, 102, 102));
        txtFecha.setText("dia/mes/año");
        txtFecha.setAlignmentX(0.8F);
        txtFecha.setBorder(null);
        txtFecha.setMargin(new java.awt.Insets(5, 15, 5, 5));
        txtFecha.setMinimumSize(new java.awt.Dimension(5, 20));
        txtFecha.setName("txtFecha"); // NOI18N
        txtFecha.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtFechaMousePressed(evt);
            }
        });
        pnlAgregarMenu.add(txtFecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 170, 260, 30));

        lblFecha.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblFecha.setForeground(new java.awt.Color(102, 0, 204));
        lblFecha.setText("Fecha de Publicación");
        lblFecha.setName("lblFecha"); // NOI18N
        pnlAgregarMenu.add(lblFecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 150, -1, 20));

        jSeparator14.setForeground(new java.awt.Color(102, 0, 204));
        jSeparator14.setPreferredSize(new java.awt.Dimension(200, 10));
        pnlAgregarMenu.add(jSeparator14, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 280, 260, 10));

        txtDisponible.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        txtDisponible.setForeground(new java.awt.Color(102, 102, 102));
        txtDisponible.setText("Ingrese cantidad");
        txtDisponible.setAlignmentX(0.8F);
        txtDisponible.setBorder(null);
        txtDisponible.setMargin(new java.awt.Insets(5, 15, 5, 5));
        txtDisponible.setMinimumSize(new java.awt.Dimension(5, 20));
        txtDisponible.setName("txtDisponible"); // NOI18N
        txtDisponible.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtDisponibleMousePressed(evt);
            }
        });
        pnlAgregarMenu.add(txtDisponible, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 250, 260, 30));

        lblDisponible.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblDisponible.setForeground(new java.awt.Color(102, 0, 204));
        lblDisponible.setText("Unidades disponibles");
        lblDisponible.setName("lblDisponible"); // NOI18N
        pnlAgregarMenu.add(lblDisponible, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 230, -1, -1));

        btnAgregar.setBackground(new java.awt.Color(255, 255, 255));
        btnAgregar.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        btnAgregar.setForeground(new java.awt.Color(51, 0, 153));
        btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/btn-agregar.png"))); // NOI18N
        btnAgregar.setText("Agregar");
        btnAgregar.setBorder(null);
        btnAgregar.setName("btnAgregar"); // NOI18N
        btnAgregar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnAgregarMousePressed(evt);
            }
        });
        pnlAgregarMenu.add(btnAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 393, 110, 40));

        btnCancelar.setBackground(new java.awt.Color(255, 255, 255));
        btnCancelar.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        btnCancelar.setForeground(new java.awt.Color(51, 0, 153));
        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/btn-salir.png"))); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.setBorder(null);
        btnCancelar.setName("btnCancelar"); // NOI18N
        btnCancelar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnCancelarMousePressed(evt);
            }
        });
        pnlAgregarMenu.add(btnCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 393, 110, 40));

        jSeparator15.setForeground(new java.awt.Color(102, 0, 204));
        jSeparator15.setPreferredSize(new java.awt.Dimension(200, 10));
        pnlAgregarMenu.add(jSeparator15, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 360, 260, 10));

        txtTipo.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        txtTipo.setForeground(new java.awt.Color(102, 102, 102));
        txtTipo.setText("Ingrese tipo material (LIBRO)");
        txtTipo.setAlignmentX(0.8F);
        txtTipo.setBorder(null);
        txtTipo.setMargin(new java.awt.Insets(5, 15, 5, 5));
        txtTipo.setMinimumSize(new java.awt.Dimension(5, 20));
        txtTipo.setName("txtTipo"); // NOI18N
        txtTipo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtTipoMousePressed(evt);
            }
        });
        pnlAgregarMenu.add(txtTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 330, 260, 30));

        lblTipo.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTipo.setForeground(new java.awt.Color(102, 0, 204));
        lblTipo.setText("Tipo material");
        lblTipo.setName("lblTipo"); // NOI18N
        pnlAgregarMenu.add(lblTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 310, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlAgregarMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 889, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlAgregarMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 524, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtIdlibroMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtIdlibroMousePressed
        // TODO add your handling code here:
       if(txtIdlibro.getText().equals("Ingrese ID del Libro"))
        txtIdlibro.setText("");

       if(txtTituloLibro.getText().equals("") || txtTituloLibro.getText() == null)
        txtTituloLibro.setText("Ingrese título");
       
       if(txtAutorLibro.getText().equals("") || txtAutorLibro.getText() == null)
        txtAutorLibro.setText("Ingrese autor");
       
       if(txtPaginas.getText().equals("") || txtPaginas.getText() == null)
        txtPaginas.setText("Ingrese número de páginas");
       
       if(txtEditorial.getText().equals("") || txtEditorial.getText() == null)
        txtEditorial.setText("Ingrese nombre de editorial");
       
       if(txtIsbn.getText().equals("") || txtIsbn.getText() == null)
        txtIsbn.setText("Ingrese los 13 digitos del ISBN");
       
       if(txtFecha.getText().equals("") || txtFecha.getText() == null)
        txtFecha.setText("dia/mes/año");
       
       if(txtDisponible.getText().equals("") || txtDisponible.getText() == null)
        txtDisponible.setText("Ingrese cantidad"); 
       
       if(txtTipo.getText().equals("") || txtTipo.getText() == null)
        txtTipo.setText("Ingrese tipo material (LIBRO)");
    }//GEN-LAST:event_txtIdlibroMousePressed

    private void txtTituloLibroMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtTituloLibroMousePressed
        
       if(txtTituloLibro.getText().equals("Ingrese título"))
        txtTituloLibro.setText("");
        
       if(txtIdlibro.getText().equals("") || txtIdlibro.getText() == null)
        txtIdlibro.setText("Ingrese ID del Libro");
       
       if(txtAutorLibro.getText().equals("") || txtAutorLibro.getText() == null)
        txtAutorLibro.setText("Ingrese autor");
       
       if(txtPaginas.getText().equals("") || txtPaginas.getText() == null)
        txtPaginas.setText("Ingrese número de páginas");
       
       if(txtEditorial.getText().equals("") || txtEditorial.getText() == null)
        txtEditorial.setText("Ingrese nombre de editorial");
       
       if(txtIsbn.getText().equals("") || txtIsbn.getText() == null)
        txtIsbn.setText("Ingrese los 13 digitos del ISBN");
       
       if(txtFecha.getText().equals("") || txtFecha.getText() == null)
        txtFecha.setText("dia/mes/año");
       
       if(txtDisponible.getText().equals("") || txtDisponible.getText() == null)
        txtDisponible.setText("Ingrese cantidad"); 
       
       if(txtTipo.getText().equals("") || txtTipo.getText() == null)
        txtTipo.setText("Ingrese tipo material (LIBRO)");
    }//GEN-LAST:event_txtTituloLibroMousePressed

    private void txtAutorLibroMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtAutorLibroMousePressed
       
       if(txtAutorLibro.getText().equals("Ingrese autor"))
        txtAutorLibro.setText("");
        
       if(txtIdlibro.getText().equals("") || txtIdlibro.getText() == null)
        txtIdlibro.setText("Ingrese ID del Libro");
        
       if(txtTituloLibro.getText().equals("") || txtTituloLibro.getText() == null)
        txtTituloLibro.setText("Ingrese título");
        
       if(txtPaginas.getText().equals("") || txtPaginas.getText() == null)
        txtPaginas.setText("Ingrese número de páginas");
       
       if(txtEditorial.getText().equals("") || txtEditorial.getText() == null)
        txtEditorial.setText("Ingrese nombre de editorial");
       
       if(txtIsbn.getText().equals("") || txtIsbn.getText() == null)
        txtIsbn.setText("Ingrese los 13 digitos del ISBN");
       
       if(txtFecha.getText().equals("") || txtFecha.getText() == null)
        txtFecha.setText("dia/mes/año");
       
       if(txtDisponible.getText().equals("") || txtDisponible.getText() == null)
        txtDisponible.setText("Ingrese cantidad"); 
       
       if(txtTipo.getText().equals("") || txtTipo.getText() == null)
        txtTipo.setText("Ingrese tipo material (LIBRO)");
    }//GEN-LAST:event_txtAutorLibroMousePressed

    private void txtPaginasMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtPaginasMousePressed
        
       if(txtPaginas.getText().equals("Ingrese número de páginas"))
        txtPaginas.setText("");
        
       if(txtIdlibro.getText().equals("") || txtIdlibro.getText() == null)
        txtIdlibro.setText("Ingrese ID del Libro");
        
       if(txtTituloLibro.getText().equals("") || txtTituloLibro.getText() == null)
        txtTituloLibro.setText("Ingrese título");
       
       if(txtAutorLibro.getText().equals("") || txtAutorLibro.getText() == null)
        txtAutorLibro.setText("Ingrese autor");
       
       if(txtEditorial.getText().equals("") || txtEditorial.getText() == null)
        txtEditorial.setText("Ingrese nombre de editorial");
       
       if(txtIsbn.getText().equals("") || txtIsbn.getText() == null)
        txtIsbn.setText("Ingrese los 13 digitos del ISBN");
       
       if(txtFecha.getText().equals("") || txtFecha.getText() == null)
        txtFecha.setText("dia/mes/año");
       
       if(txtDisponible.getText().equals("") || txtDisponible.getText() == null)
        txtDisponible.setText("Ingrese cantidad");
       
      if(txtTipo.getText().equals("") || txtTipo.getText() == null)
        txtTipo.setText("Ingrese tipo material (LIBRO)");
    }//GEN-LAST:event_txtPaginasMousePressed

    private void txtEditorialMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtEditorialMousePressed
        
       if(txtEditorial.getText().equals("Ingrese nombre de editorial"))
        txtEditorial.setText("");
       
       if(txtIdlibro.getText().equals("") || txtIdlibro.getText() == null)
        txtIdlibro.setText("Ingrese ID del Libro");
        
       if(txtTituloLibro.getText().equals("") || txtTituloLibro.getText() == null)
        txtTituloLibro.setText("Ingrese título");
       
       if(txtAutorLibro.getText().equals("") || txtAutorLibro.getText() == null)
        txtAutorLibro.setText("Ingrese autor");
       
       if(txtPaginas.getText().equals("") || txtPaginas.getText() == null)
        txtPaginas.setText("Ingrese número de páginas");
       
       if(txtIsbn.getText().equals("") || txtIsbn.getText() == null)
        txtIsbn.setText("Ingrese los 13 digitos del ISBN");
       
       if(txtFecha.getText().equals("") || txtFecha.getText() == null)
        txtFecha.setText("dia/mes/año");
       
       if(txtDisponible.getText().equals("") || txtDisponible.getText() == null)
        txtDisponible.setText("Ingrese cantidad");
       
       if(txtTipo.getText().equals("") || txtTipo.getText() == null)
        txtTipo.setText("Ingrese tipo material (LIBRO)");
    }//GEN-LAST:event_txtEditorialMousePressed

    private void txtIsbnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtIsbnMousePressed
        
       if(txtIsbn.getText().equals("Ingrese los 13 digitos del ISBN"))
        txtIsbn.setText(""); 
        
       if(txtIdlibro.getText().equals("") || txtIdlibro.getText() == null)
        txtIdlibro.setText("Ingrese ID del Libro");
        
       if(txtTituloLibro.getText().equals("") || txtTituloLibro.getText() == null)
        txtTituloLibro.setText("Ingrese título");
       
       if(txtAutorLibro.getText().equals("") || txtAutorLibro.getText() == null)
        txtAutorLibro.setText("Ingrese autor");
       
       if(txtPaginas.getText().equals("") || txtPaginas.getText() == null)
        txtPaginas.setText("Ingrese número de páginas");
       
       if(txtEditorial.getText().equals("") || txtEditorial.getText() == null)
        txtEditorial.setText("Ingrese nombre de editorial");
       
       if(txtFecha.getText().equals("") || txtFecha.getText() == null)
        txtFecha.setText("dia/mes/año");
       
       if(txtDisponible.getText().equals("") || txtDisponible.getText() == null)
        txtDisponible.setText("Ingrese cantidad");
       
       if(txtTipo.getText().equals("") || txtTipo.getText() == null)
        txtTipo.setText("Ingrese tipo material (LIBRO)");
    }//GEN-LAST:event_txtIsbnMousePressed

    private void txtFechaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtFechaMousePressed
       
       if(txtFecha.getText().equals("dia/mes/año"))
        txtFecha.setText("");
          
       if(txtIdlibro.getText().equals("") || txtIdlibro.getText() == null)
        txtIdlibro.setText("Ingrese ID del Libro");
        
       if(txtTituloLibro.getText().equals("") || txtTituloLibro.getText() == null)
        txtTituloLibro.setText("Ingrese título");
       
       if(txtAutorLibro.getText().equals("") || txtAutorLibro.getText() == null)
        txtAutorLibro.setText("Ingrese autor");
       
       if(txtPaginas.getText().equals("") || txtPaginas.getText() == null)
        txtPaginas.setText("Ingrese número de páginas");
       
       if(txtEditorial.getText().equals("") || txtEditorial.getText() == null)
        txtEditorial.setText("Ingrese nombre de editorial");
       
       if(txtIsbn.getText().equals("") || txtIsbn.getText() == null)
        txtIsbn.setText("Ingrese los 13 digitos del ISBN");
       
       if(txtDisponible.getText().equals("") || txtDisponible.getText() == null)
        txtDisponible.setText("Ingrese cantidad");
       
       if(txtTipo.getText().equals("") || txtTipo.getText() == null)
        txtTipo.setText("Ingrese tipo material (LIBRO)");
    }//GEN-LAST:event_txtFechaMousePressed

    private void txtDisponibleMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtDisponibleMousePressed
         
       if(txtDisponible.getText().equals("Ingrese cantidad"))
        txtDisponible.setText("");
        
       if(txtIdlibro.getText().equals("") || txtIdlibro.getText() == null)
        txtIdlibro.setText("Ingrese ID del Libro");
        
       if(txtTituloLibro.getText().equals("") || txtTituloLibro.getText() == null)
        txtTituloLibro.setText("Ingrese título");
       
       if(txtAutorLibro.getText().equals("") || txtAutorLibro.getText() == null)
        txtAutorLibro.setText("Ingrese autor");
       
       if(txtPaginas.getText().equals("") || txtPaginas.getText() == null)
        txtPaginas.setText("Ingrese número de páginas");
       
       if(txtEditorial.getText().equals("") || txtEditorial.getText() == null)
        txtEditorial.setText("Ingrese nombre de editorial");
       
       if(txtIsbn.getText().equals("") || txtIsbn.getText() == null)
        txtIsbn.setText("Ingrese los 13 digitos del ISBN");
              
       if(txtFecha.getText().equals("") || txtFecha.getText() == null)
        txtFecha.setText("dia/mes/año");
       
       if(txtTipo.getText().equals("") || txtTipo.getText() == null)
        txtTipo.setText("Ingrese tipo material (LIBRO)");
    }//GEN-LAST:event_txtDisponibleMousePressed

    private void btnAgregarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAgregarMousePressed
        
        //Comprobar que los datos no sean nulos ni vaciós
        if(txtIdlibro.getText().equals("Ingrese ID del Libro") || txtTituloLibro.getText().equals("Ingrese Título")
            || txtAutorLibro.getText().equals("Ingrese autor") || txtFecha.getText().equals("dia/mes/año")
            || txtPaginas.getText().equals("Ingrese número de páginas")|| txtEditorial.getText().equals("Ingrese nombre de editorial")
            || txtIsbn.getText().equals("Ingrese ISBN (13 carácteres)")|| txtDisponible.getText().equals("Ingrese cantidad")
            || txtTipo.getText().equals("Ingrese tipo material (LIBRO)")){
            JOptionPane.showMessageDialog(this, "Debe llenar todos los campos \n", "AVISO",JOptionPane.INFORMATION_MESSAGE);
            txtIdlibro.requestFocus();
        } else { 
            try {
                //Creación de variables que almacenan los datos introducidos
                String id = txtIdlibro.getText();
                String titulo = txtTituloLibro.getText();
                String autor = txtAutorLibro.getText();
                String fecha = txtFecha.getText();
                String num_pag = txtPaginas.getText();
                String editorial = txtEditorial.getText();
                String isbn = txtIsbn.getText();
                String disponible = txtDisponible.getText();
                String tipo = txtTipo.getText();
                int pag=0;
                int u_disponible=0;
                
                //Variable que almacenará el incremento del id autor
                int idAutor = 1;
                try {
                    idAutor = incremento_id();
                } catch (SQLException ex) {
                    Logger.getLogger(Agregar.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                //Variable que almacenará el incremento del id editorial
                int idEditorial = 1;
                idEditorial = incrementarIdEditorial();
                
                //Condicional que evalua si se ha ingresado 8 caracteres dentro del apartado ID
                if(id.length()== 8){
                    //Condicional que lanza mensaje de error si hay algún dato con tipo erróneo
                    if(id == null || "".equals(id) || titulo == null || "".equals(titulo) || autor == null || "".equals(autor)
                            || fecha == null || "".equals(fecha) || num_pag == null || "".equals(num_pag)
                            || editorial == null || "".equals(editorial) || isbn == null || "".equals(isbn)|| isbn.length()>13
                            || disponible == null
                            || "".equals(disponible) || tipo == null || "".equals(tipo)){
                        JOptionPane.showMessageDialog(this, "Rellenar los campos solicitados de forma correcta \n", "AVISO", JOptionPane.INFORMATION_MESSAGE);
                        txtIdlibro.requestFocus();
                    } else {
                        
                        //Convertir datos de tipo String a enteros
                        pag = Integer.parseInt(num_pag);
                        u_disponible = Integer.parseInt(disponible);
                        
                        //Convetir dato ingresado a formato Fecha
                        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
                        java.sql.Date conversion = null;
                        
                        try {
                            Date fecha_publicacion = formato.parse(fecha);
                            conversion = new java.sql.Date(fecha_publicacion.getTime());
                        }catch(Exception e){
                            System.out.println("Error" + e);
                        }
                        
                        //Llamar a los siguientes métodos, pasándole parámetros
                        insertarAutor(idAutor, autor);
                        insertarEditorial(idEditorial, editorial);
                        //insertarTipo(tipo);
                        
                        //Bloque de código para insertar información en tabla materiales
                        String sql = "INSERT INTO materiales (id,titulo,codigo_tipo_material,codigo_autor,numero_de_paginas,codigo_editorial,isbn,fecha_publicacion,unidades_disponibles) "
                                + "VALUES (?,?,4,?,?,?,?,?,?)";
                        PreparedStatement stmt = null;
                        //ResultSet rs = null;
                        int rows = 0;
                        
                        try{
                            con = Conexion.getConnection();
                            stmt = con.prepareStatement(sql);
                            int index = 1;
                            stmt.setString(index++, id);
                            stmt.setString(index++, titulo);
                            stmt.setInt(index++, idAutor);
                            stmt.setInt(index++, pag);
                            stmt.setInt(index++, idEditorial);
                            stmt.setString(index++, isbn);
                            stmt.setDate(index++, conversion);
                            stmt.setInt(index, u_disponible);
                            
                            rows = stmt.executeUpdate();
                            System.out.println("Registros afectados " + rows);
                        }catch(SQLException e){
                            System.out.println("Error" + e);
                        } finally{
                            Conexion.close(stmt);
                            Conexion.close(con);
                        }
                        //Llamada al método limpiar campos
                        limpiarCampos();
                        
                        //Cerrar ventana
                        try {
                            JOptionPane.showMessageDialog(this, "Datos ingresados correctamente. \n", "AVISO", JOptionPane.INFORMATION_MESSAGE);
                            Dashboard dash = new Dashboard();
                            dash.setVisible(true);
                            this.dispose();
                        } catch (SQLException ex) {
                            Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                } else if(id.length()<8) {
                    JOptionPane.showMessageDialog(this, "Error en Campo ID. Pocos caracteres. Debe tener 8 caracteres \n", "AVISO", JOptionPane.INFORMATION_MESSAGE);
                } else if(id.length()>8){
                    JOptionPane.showMessageDialog(this, "Error en Campo ID. Excede de 8 caracteres \n", "AVISO", JOptionPane.INFORMATION_MESSAGE);
                }
                
            } catch (SQLException ex) {
                Logger.getLogger(Agregar.class.getName()).log(Level.SEVERE, null, ex);
            }
             
        }
    }//GEN-LAST:event_btnAgregarMousePressed

    private void txtTipoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtTipoMousePressed
        
       if(txtTipo.getText().equals("Ingrese tipo material (LIBRO)"))
        txtTipo.setText("");
        
       if(txtIdlibro.getText().equals("") || txtIdlibro.getText() == null)
        txtIdlibro.setText("Ingrese ID del libro");
        
       if(txtTituloLibro.getText().equals("") || txtTituloLibro.getText() == null)
        txtTituloLibro.setText("Ingrese título");
       
       if(txtAutorLibro.getText().equals("") || txtAutorLibro.getText() == null)
        txtAutorLibro.setText("Ingrese autor");
       
       if(txtPaginas.getText().equals("") || txtPaginas.getText() == null)
        txtPaginas.setText("Ingrese número de páginas");
       
       if(txtEditorial.getText().equals("") || txtEditorial.getText() == null)
        txtEditorial.setText("Ingrese nombre de editorial");
       
       if(txtIsbn.getText().equals("") || txtIsbn.getText() == null)
        txtIsbn.setText("Ingrese los 13 digitos del ISBN");
       
       if(txtFecha.getText().equals("") || txtFecha.getText() == null)
        txtFecha.setText("dia/mes/año");
       
       if(txtDisponible.getText().equals("") || txtDisponible.getText() == null)
        txtDisponible.setText("Ingrese cantidad"); 
        
    }//GEN-LAST:event_txtTipoMousePressed

    private void btnCancelarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelarMousePressed

        JOptionPane.showMessageDialog(this, "Acción cancelada. Volviendo al menú. \n", "AVISO", JOptionPane.INFORMATION_MESSAGE);
        
        try {
            Tipo_Material tipo = new Tipo_Material();
            tipo.setVisible(true);
            this.dispose();
        } catch (SQLException ex) {
            Logger.getLogger(Agregar.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnCancelarMousePressed

    
    public int insertarAutor (int idAutor, String autor){
        
        String sql = "INSERT INTO autores (id,nombre_autor) values (?,?)";
                    PreparedStatement stmt = null;
                    int rows = 0;
                    
                    try{
                        con = Conexion.getConnection();
                        stmt = con.prepareStatement(sql);
                        int index = 1;
                        stmt.setInt(index++, idAutor);
                        stmt.setString(index, autor);
                        
                        rows = stmt.executeUpdate();
                        System.out.println("Registros afectados " + rows);
                    }catch(SQLException e){
                        System.out.println("Error" + e);
                    } finally{
                        Conexion.close(stmt);
                        Conexion.close(con);
                    }
                    return rows;
    }
    
    public int insertarEditorial (int idEditorial,String editorial){
        String sql = "INSERT INTO editoriales (id, nombre_editorial) values (?,?)";
                    PreparedStatement stmt = null;
                    //ResultSet rs = null;
                    int rows = 0;
                    
                    try{
                        con = Conexion.getConnection();
                        stmt = con.prepareStatement(sql);
                        int index = 1;
                        stmt.setInt(index++, idEditorial);
                        stmt.setString(index, editorial);
                        
                        rows = stmt.executeUpdate();
                        System.out.println("Registros afectados " + rows);
                    }catch(SQLException e){
                        System.out.println("error" + e);
                    } finally{
                        Conexion.close(stmt);
                        Conexion.close(con);
                    }
                    return rows;
    }
    
    public int incremento_id () throws SQLException {
        int id = 1;
        PreparedStatement ps = null;
        ResultSet rs = null;
        con = Conexion.getConnection();
        try{
            ps = con.prepareStatement("SELECT MAX(id) FROM autores");
            rs = ps.executeQuery();
            while(rs.next()){
                id = rs.getInt(1) + 1;
            }
        }catch(SQLException e){
            System.out.println("Error: " + e);
        } finally{
            Conexion.close(con);
            Conexion.close(ps);
            Conexion.close(rs);
        }
        return id;
    }
    
    public int incrementarIdEditorial() throws SQLException{
        int id = 1;
        PreparedStatement ps = null;
        ResultSet rs = null;
        con = Conexion.getConnection();
        try{
            ps = con.prepareStatement("SELECT MAX(id) FROM editoriales");
            rs = ps.executeQuery();
            while(rs.next()){
                id = rs.getInt(1) + 1;
            }
        }catch(SQLException e){
            System.out.println("Error: " + e);
        } finally{
            Conexion.close(con);
            Conexion.close(ps);
            Conexion.close(rs);
        }
        return id;
    }
    
    public void limpiarCampos(){
                txtIdlibro.setText("");
                txtTituloLibro.setText("");
                txtAutorLibro.setText("");
                txtFecha.setText("");
                txtPaginas.setText("");
                txtEditorial.setText("");
                txtIsbn.setText("");
                txtDisponible.setText("");
                txtTipo.setText("");
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem1;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem2;
    private javax.swing.JSeparator jSeparator10;
    private javax.swing.JSeparator jSeparator12;
    private javax.swing.JSeparator jSeparator13;
    private javax.swing.JSeparator jSeparator14;
    private javax.swing.JSeparator jSeparator15;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JLabel lblAutorLibro;
    private javax.swing.JLabel lblDisponible;
    private javax.swing.JLabel lblEditorial;
    private javax.swing.JLabel lblFecha;
    private javax.swing.JLabel lblIdLibro;
    private javax.swing.JLabel lblIsbn;
    private javax.swing.JLabel lblNewLibro;
    private javax.swing.JLabel lblPaginas;
    private javax.swing.JLabel lblTipo;
    private javax.swing.JLabel lblTituloLibro;
    private javax.swing.JPanel pnlAgregarMenu;
    private javax.swing.JTextField txtAutorLibro;
    private javax.swing.JTextField txtDisponible;
    private javax.swing.JTextField txtEditorial;
    private javax.swing.JTextField txtFecha;
    private javax.swing.JTextField txtIdlibro;
    private javax.swing.JTextField txtIsbn;
    private javax.swing.JTextField txtPaginas;
    private javax.swing.JTextField txtTipo;
    private javax.swing.JTextField txtTituloLibro;
    // End of variables declaration//GEN-END:variables
}
