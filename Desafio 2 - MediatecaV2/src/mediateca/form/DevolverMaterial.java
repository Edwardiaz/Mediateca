package mediateca.form;

import datos.Conexion;
import java.sql.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import javax.swing.table.DefaultTableModel;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @erick alas
 */
public class DevolverMaterial extends javax.swing.JFrame {

    Conexion conn = new Conexion();
    Connection con = conn.getConnection();
    SolicitarMaterial soli = new SolicitarMaterial();

    public DevolverMaterial() throws SQLException {
        initComponents();
        this.setTitle("Retornar material");
        this.setLocationRelativeTo(null);
        mostrarPrestamos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPrestamos = new javax.swing.JTable();
        btnRetornar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtSocio = new javax.swing.JTextField();
        btnAtras1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblPrestamos.setFont(new java.awt.Font("Century", 0, 12)); // NOI18N
        tblPrestamos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tblPrestamos);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 20, 590, 240));

        btnRetornar.setBackground(new java.awt.Color(255, 255, 255));
        btnRetornar.setFont(new java.awt.Font("Century", 0, 14)); // NOI18N
        btnRetornar.setForeground(new java.awt.Color(102, 0, 153));
        btnRetornar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/btn-devolver.png"))); // NOI18N
        btnRetornar.setText("Devolver");
        btnRetornar.setBorder(null);
        btnRetornar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRetornar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnRetornarMousePressed(evt);
            }
        });
        jPanel1.add(btnRetornar, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 400, 110, 40));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Century", 0, 12)); // NOI18N
        jLabel1.setText("Ingrese documento de Socio:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 320, -1, -1));
        jPanel1.add(txtSocio, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 280, 130, 30));

        btnAtras1.setBackground(new java.awt.Color(255, 255, 255));
        btnAtras1.setFont(new java.awt.Font("Century", 0, 14)); // NOI18N
        btnAtras1.setForeground(new java.awt.Color(102, 0, 153));
        btnAtras1.setText("Atrás");
        btnAtras1.setBorder(null);
        btnAtras1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAtras1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnAtras1MousePressed(evt);
            }
        });
        jPanel1.add(btnAtras1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 400, 90, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 740, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 467, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRetornarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRetornarMousePressed
        
//Bloque de código que ayuda a obtener el valor de la columna ID en la tabla 
        try {
            //Variable para almacenar el valor de la fla seleccionada
            int fila = tblPrestamos.getSelectedRow();

            String idMater = tblPrestamos.getValueAt(fila, 1).toString();
            String carnet = txtSocio.getText();
            
            //System.out.println(idMater);
            //System.out.println(carnet);
            //Condicionales
            if (!soli.existeMaterial(idMater)) {
                JOptionPane.showMessageDialog(this, "No existe ningún material con ese ID. \n", "AVISO", JOptionPane.INFORMATION_MESSAGE);
            } else if (carnet.equals("") || carnet == null) {
                JOptionPane.showMessageDialog(this, "Debe llenar todos los campos \n", "AVISO", JOptionPane.ERROR_MESSAGE);
            }
            
                try {
                    //Bloque de código para verificar si el socio existe en el sistema
                    boolean aceptado = soli.existeSocio(carnet);
                    if (!aceptado) {
                        JOptionPane.showMessageDialog(this, "No existe ningún socio con ese documento. \n", "AVISO", JOptionPane.INFORMATION_MESSAGE);
                        txtSocio.setText("");
                        txtSocio.requestFocus();
                    } else if (!soli.verificarPrestamo(carnet, idMater)) {
                        JOptionPane.showMessageDialog(this, "No se ha podido encontrar registro del prestamo con los datos ingresados. \n", "AVISO", JOptionPane.INFORMATION_MESSAGE);
                        txtSocio.setText("");
                    }  else {
                       regresarMaterial(carnet, idMater);
                       txtSocio.setText("");
                    }
                } catch (Exception e) {
                    System.out.println("Error" + e);
                }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Seleccione una fila de la tabla. \n", "AVISO", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnRetornarMousePressed

    private void btnAtras1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAtras1MousePressed
    ElegirOpcion op = new ElegirOpcion();
        op.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnAtras1MousePressed

    
    public void regresarMaterial(String carne, String material_id) throws SQLException, ParseException{
        int idSocio = 0;
        PreparedStatement stmt = null;
        PreparedStatement stmt2  = null;
        PreparedStatement stmt3  = null;
        ResultSet rs = null;
        
        //Sentencia para seleccionar el id del socio y almacenarlo en variable
        //Variable se pasará como parámetro del insert
        stmt = con.prepareStatement("SELECT socios.id FROM socios WHERE socios.documento = '"+carne+"'");
        rs = stmt.executeQuery();
        if (rs.next()) {
            idSocio = rs.getInt("id");
        }
        System.out.println(idSocio);
        
        stmt2= con.prepareStatement("DELETE FROM prestamos WHERE codigo_material = '"+ material_id +"' AND codigo_socio = '"+ idSocio +"' LIMIT 1");
        stmt2.executeUpdate();
        
        stmt3 = con.prepareStatement("UPDATE materiales SET unidades_disponibles = unidades_disponibles+1 WHERE id = '"+ material_id +"';");
        stmt3.executeUpdate();
        JOptionPane.showMessageDialog(this, "¡Devolución realizada! Gracias por la entrega. \n", "HECHO", JOptionPane.INFORMATION_MESSAGE);
        
        mostrarPrestamos();
        Conexion.close(con);
        Conexion.close(rs);
    }
    
    public void mostrarPrestamos() throws SQLException {
        //Variables a utilizar
        PreparedStatement stmt = null;
        ResultSet rs = null;

        try {
            //Sentencia que permite seleccionar los datos de la tabla prestamos
            String sql = "SELECT prestamos.id, prestamos.codigo_material AS Material, socios.documento AS Socio, prestamos.fecha_prestamo, prestamos.fecha_devolucion FROM prestamos LEFT JOiN materiales ON materiales.id = prestamos.codigo_material LEFT JOIN socios on socios.id = prestamos.codigo_socio";
            stmt = con.prepareStatement(sql);
            rs = stmt.executeQuery(); //Ejecución

            //Contador que ayuda a recorrer uno a uno las filas de la lista
            int count = 0;
            while (rs.next()) {
                count++;
            }

            String lista[][] = new String[count][9];
            int i = 0;
            ResultSet re = stmt.executeQuery("SELECT prestamos.id, prestamos.codigo_material AS Material, socios.documento AS Socio, prestamos.fecha_prestamo, prestamos.fecha_devolucion FROM prestamos LEFT JOiN materiales ON materiales.id = prestamos.codigo_material LEFT JOIN socios on socios.id = prestamos.codigo_socio");
            while (re.next()) {
                lista[i][0] = re.getString("id");
                lista[i][1] = re.getString("Material");
                lista[i][2] = re.getString("Socio");
                lista[i][3] = re.getString("fecha_prestamo");
                lista[i][4] = re.getString("fecha_devolucion");
                i++;
            }

            //Ingresar los dtaos en la tabla
            tblPrestamos.setModel(new DefaultTableModel(
                    lista,
                    new String[]{
                        "ID", "Material", "Socio", "Fecha de Prestamo", "Fecha de Devolución"
                    }));
        } catch (SQLException ex) {
            System.out.println("ERROR: " + ex);
        } finally {
            
        }
    }

    
    
    
    

       
    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DevolverMaterial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DevolverMaterial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DevolverMaterial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DevolverMaterial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new DevolverMaterial().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(DevolverMaterial.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtras1;
    private javax.swing.JButton btnRetornar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblPrestamos;
    private javax.swing.JTextField txtSocio;
    // End of variables declaration//GEN-END:variables
}
